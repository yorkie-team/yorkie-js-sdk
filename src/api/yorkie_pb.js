// source: yorkie.proto
/**
 * @fileoverview
 * @enhanceable
 * @suppress {missingRequire} reports error on implicit type usages.
 * @suppress {messageConventions} JS Compiler reports an error if a variable or
 *     field starts with 'MSG_' and isn't a translatable message.
 * @public
 */
// GENERATED CODE -- DO NOT EDIT!
/* eslint-disable */
// @ts-nocheck

var jspb = require('google-protobuf');
var goog = jspb;
var global = Function('return this')();

var resources_pb = require('./resources_pb.js');
goog.object.extend(proto, resources_pb);
goog.exportSymbol('proto.api.ActivateClientRequest', null, global);
goog.exportSymbol('proto.api.ActivateClientResponse', null, global);
goog.exportSymbol('proto.api.AttachDocumentRequest', null, global);
goog.exportSymbol('proto.api.AttachDocumentResponse', null, global);
goog.exportSymbol('proto.api.DeactivateClientRequest', null, global);
goog.exportSymbol('proto.api.DeactivateClientResponse', null, global);
goog.exportSymbol('proto.api.DetachDocumentRequest', null, global);
goog.exportSymbol('proto.api.DetachDocumentResponse', null, global);
goog.exportSymbol('proto.api.ListChangesRequest', null, global);
goog.exportSymbol('proto.api.ListChangesResponse', null, global);
goog.exportSymbol('proto.api.PushPullRequest', null, global);
goog.exportSymbol('proto.api.PushPullResponse', null, global);
goog.exportSymbol('proto.api.UpdateMetadataRequest', null, global);
goog.exportSymbol('proto.api.UpdateMetadataResponse', null, global);
goog.exportSymbol('proto.api.WatchDocumentsRequest', null, global);
goog.exportSymbol('proto.api.WatchDocumentsResponse', null, global);
goog.exportSymbol('proto.api.WatchDocumentsResponse.BodyCase', null, global);
goog.exportSymbol('proto.api.WatchDocumentsResponse.Initialization', null, global);
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.api.ActivateClientRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.api.ActivateClientRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.api.ActivateClientRequest.displayName = 'proto.api.ActivateClientRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.api.ActivateClientResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.api.ActivateClientResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.api.ActivateClientResponse.displayName = 'proto.api.ActivateClientResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.api.DeactivateClientRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.api.DeactivateClientRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.api.DeactivateClientRequest.displayName = 'proto.api.DeactivateClientRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.api.DeactivateClientResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.api.DeactivateClientResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.api.DeactivateClientResponse.displayName = 'proto.api.DeactivateClientResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.api.AttachDocumentRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.api.AttachDocumentRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.api.AttachDocumentRequest.displayName = 'proto.api.AttachDocumentRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.api.AttachDocumentResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.api.AttachDocumentResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.api.AttachDocumentResponse.displayName = 'proto.api.AttachDocumentResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.api.DetachDocumentRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.api.DetachDocumentRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.api.DetachDocumentRequest.displayName = 'proto.api.DetachDocumentRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.api.DetachDocumentResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.api.DetachDocumentResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.api.DetachDocumentResponse.displayName = 'proto.api.DetachDocumentResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.api.WatchDocumentsRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.api.WatchDocumentsRequest.repeatedFields_, null);
};
goog.inherits(proto.api.WatchDocumentsRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.api.WatchDocumentsRequest.displayName = 'proto.api.WatchDocumentsRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.api.WatchDocumentsResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, proto.api.WatchDocumentsResponse.oneofGroups_);
};
goog.inherits(proto.api.WatchDocumentsResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.api.WatchDocumentsResponse.displayName = 'proto.api.WatchDocumentsResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.api.WatchDocumentsResponse.Initialization = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.api.WatchDocumentsResponse.Initialization, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.api.WatchDocumentsResponse.Initialization.displayName = 'proto.api.WatchDocumentsResponse.Initialization';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.api.PushPullRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.api.PushPullRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.api.PushPullRequest.displayName = 'proto.api.PushPullRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.api.PushPullResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.api.PushPullResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.api.PushPullResponse.displayName = 'proto.api.PushPullResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.api.UpdateMetadataRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.api.UpdateMetadataRequest.repeatedFields_, null);
};
goog.inherits(proto.api.UpdateMetadataRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.api.UpdateMetadataRequest.displayName = 'proto.api.UpdateMetadataRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.api.UpdateMetadataResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.api.UpdateMetadataResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.api.UpdateMetadataResponse.displayName = 'proto.api.UpdateMetadataResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.api.ListChangesRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.api.ListChangesRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.api.ListChangesRequest.displayName = 'proto.api.ListChangesRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.api.ListChangesResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.api.ListChangesResponse.repeatedFields_, null);
};
goog.inherits(proto.api.ListChangesResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.api.ListChangesResponse.displayName = 'proto.api.ListChangesResponse';
}



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.api.ActivateClientRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.api.ActivateClientRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.api.ActivateClientRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.api.ActivateClientRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    clientKey: jspb.Message.getFieldWithDefault(msg, 1, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.api.ActivateClientRequest}
 */
proto.api.ActivateClientRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.api.ActivateClientRequest;
  return proto.api.ActivateClientRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.api.ActivateClientRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.api.ActivateClientRequest}
 */
proto.api.ActivateClientRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setClientKey(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.api.ActivateClientRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.api.ActivateClientRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.api.ActivateClientRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.api.ActivateClientRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getClientKey();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
};


/**
 * optional string client_key = 1;
 * @return {string}
 */
proto.api.ActivateClientRequest.prototype.getClientKey = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.api.ActivateClientRequest} returns this
 */
proto.api.ActivateClientRequest.prototype.setClientKey = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.api.ActivateClientResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.api.ActivateClientResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.api.ActivateClientResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.api.ActivateClientResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    clientKey: jspb.Message.getFieldWithDefault(msg, 1, ""),
    clientId: msg.getClientId_asB64()
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.api.ActivateClientResponse}
 */
proto.api.ActivateClientResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.api.ActivateClientResponse;
  return proto.api.ActivateClientResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.api.ActivateClientResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.api.ActivateClientResponse}
 */
proto.api.ActivateClientResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setClientKey(value);
      break;
    case 2:
      var value = /** @type {!Uint8Array} */ (reader.readBytes());
      msg.setClientId(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.api.ActivateClientResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.api.ActivateClientResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.api.ActivateClientResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.api.ActivateClientResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getClientKey();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getClientId_asU8();
  if (f.length > 0) {
    writer.writeBytes(
      2,
      f
    );
  }
};


/**
 * optional string client_key = 1;
 * @return {string}
 */
proto.api.ActivateClientResponse.prototype.getClientKey = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.api.ActivateClientResponse} returns this
 */
proto.api.ActivateClientResponse.prototype.setClientKey = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional bytes client_id = 2;
 * @return {string}
 */
proto.api.ActivateClientResponse.prototype.getClientId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * optional bytes client_id = 2;
 * This is a type-conversion wrapper around `getClientId()`
 * @return {string}
 */
proto.api.ActivateClientResponse.prototype.getClientId_asB64 = function() {
  return /** @type {string} */ (jspb.Message.bytesAsB64(
      this.getClientId()));
};


/**
 * optional bytes client_id = 2;
 * Note that Uint8Array is not supported on all browsers.
 * @see http://caniuse.com/Uint8Array
 * This is a type-conversion wrapper around `getClientId()`
 * @return {!Uint8Array}
 */
proto.api.ActivateClientResponse.prototype.getClientId_asU8 = function() {
  return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(
      this.getClientId()));
};


/**
 * @param {!(string|Uint8Array)} value
 * @return {!proto.api.ActivateClientResponse} returns this
 */
proto.api.ActivateClientResponse.prototype.setClientId = function(value) {
  return jspb.Message.setProto3BytesField(this, 2, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.api.DeactivateClientRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.api.DeactivateClientRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.api.DeactivateClientRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.api.DeactivateClientRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    clientId: msg.getClientId_asB64()
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.api.DeactivateClientRequest}
 */
proto.api.DeactivateClientRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.api.DeactivateClientRequest;
  return proto.api.DeactivateClientRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.api.DeactivateClientRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.api.DeactivateClientRequest}
 */
proto.api.DeactivateClientRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {!Uint8Array} */ (reader.readBytes());
      msg.setClientId(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.api.DeactivateClientRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.api.DeactivateClientRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.api.DeactivateClientRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.api.DeactivateClientRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getClientId_asU8();
  if (f.length > 0) {
    writer.writeBytes(
      1,
      f
    );
  }
};


/**
 * optional bytes client_id = 1;
 * @return {string}
 */
proto.api.DeactivateClientRequest.prototype.getClientId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * optional bytes client_id = 1;
 * This is a type-conversion wrapper around `getClientId()`
 * @return {string}
 */
proto.api.DeactivateClientRequest.prototype.getClientId_asB64 = function() {
  return /** @type {string} */ (jspb.Message.bytesAsB64(
      this.getClientId()));
};


/**
 * optional bytes client_id = 1;
 * Note that Uint8Array is not supported on all browsers.
 * @see http://caniuse.com/Uint8Array
 * This is a type-conversion wrapper around `getClientId()`
 * @return {!Uint8Array}
 */
proto.api.DeactivateClientRequest.prototype.getClientId_asU8 = function() {
  return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(
      this.getClientId()));
};


/**
 * @param {!(string|Uint8Array)} value
 * @return {!proto.api.DeactivateClientRequest} returns this
 */
proto.api.DeactivateClientRequest.prototype.setClientId = function(value) {
  return jspb.Message.setProto3BytesField(this, 1, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.api.DeactivateClientResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.api.DeactivateClientResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.api.DeactivateClientResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.api.DeactivateClientResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    clientId: msg.getClientId_asB64()
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.api.DeactivateClientResponse}
 */
proto.api.DeactivateClientResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.api.DeactivateClientResponse;
  return proto.api.DeactivateClientResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.api.DeactivateClientResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.api.DeactivateClientResponse}
 */
proto.api.DeactivateClientResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {!Uint8Array} */ (reader.readBytes());
      msg.setClientId(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.api.DeactivateClientResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.api.DeactivateClientResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.api.DeactivateClientResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.api.DeactivateClientResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getClientId_asU8();
  if (f.length > 0) {
    writer.writeBytes(
      1,
      f
    );
  }
};


/**
 * optional bytes client_id = 1;
 * @return {string}
 */
proto.api.DeactivateClientResponse.prototype.getClientId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * optional bytes client_id = 1;
 * This is a type-conversion wrapper around `getClientId()`
 * @return {string}
 */
proto.api.DeactivateClientResponse.prototype.getClientId_asB64 = function() {
  return /** @type {string} */ (jspb.Message.bytesAsB64(
      this.getClientId()));
};


/**
 * optional bytes client_id = 1;
 * Note that Uint8Array is not supported on all browsers.
 * @see http://caniuse.com/Uint8Array
 * This is a type-conversion wrapper around `getClientId()`
 * @return {!Uint8Array}
 */
proto.api.DeactivateClientResponse.prototype.getClientId_asU8 = function() {
  return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(
      this.getClientId()));
};


/**
 * @param {!(string|Uint8Array)} value
 * @return {!proto.api.DeactivateClientResponse} returns this
 */
proto.api.DeactivateClientResponse.prototype.setClientId = function(value) {
  return jspb.Message.setProto3BytesField(this, 1, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.api.AttachDocumentRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.api.AttachDocumentRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.api.AttachDocumentRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.api.AttachDocumentRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    clientId: msg.getClientId_asB64(),
    changePack: (f = msg.getChangePack()) && resources_pb.ChangePack.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.api.AttachDocumentRequest}
 */
proto.api.AttachDocumentRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.api.AttachDocumentRequest;
  return proto.api.AttachDocumentRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.api.AttachDocumentRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.api.AttachDocumentRequest}
 */
proto.api.AttachDocumentRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {!Uint8Array} */ (reader.readBytes());
      msg.setClientId(value);
      break;
    case 2:
      var value = new resources_pb.ChangePack;
      reader.readMessage(value,resources_pb.ChangePack.deserializeBinaryFromReader);
      msg.setChangePack(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.api.AttachDocumentRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.api.AttachDocumentRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.api.AttachDocumentRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.api.AttachDocumentRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getClientId_asU8();
  if (f.length > 0) {
    writer.writeBytes(
      1,
      f
    );
  }
  f = message.getChangePack();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      resources_pb.ChangePack.serializeBinaryToWriter
    );
  }
};


/**
 * optional bytes client_id = 1;
 * @return {string}
 */
proto.api.AttachDocumentRequest.prototype.getClientId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * optional bytes client_id = 1;
 * This is a type-conversion wrapper around `getClientId()`
 * @return {string}
 */
proto.api.AttachDocumentRequest.prototype.getClientId_asB64 = function() {
  return /** @type {string} */ (jspb.Message.bytesAsB64(
      this.getClientId()));
};


/**
 * optional bytes client_id = 1;
 * Note that Uint8Array is not supported on all browsers.
 * @see http://caniuse.com/Uint8Array
 * This is a type-conversion wrapper around `getClientId()`
 * @return {!Uint8Array}
 */
proto.api.AttachDocumentRequest.prototype.getClientId_asU8 = function() {
  return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(
      this.getClientId()));
};


/**
 * @param {!(string|Uint8Array)} value
 * @return {!proto.api.AttachDocumentRequest} returns this
 */
proto.api.AttachDocumentRequest.prototype.setClientId = function(value) {
  return jspb.Message.setProto3BytesField(this, 1, value);
};


/**
 * optional ChangePack change_pack = 2;
 * @return {?proto.api.ChangePack}
 */
proto.api.AttachDocumentRequest.prototype.getChangePack = function() {
  return /** @type{?proto.api.ChangePack} */ (
    jspb.Message.getWrapperField(this, resources_pb.ChangePack, 2));
};


/**
 * @param {?proto.api.ChangePack|undefined} value
 * @return {!proto.api.AttachDocumentRequest} returns this
*/
proto.api.AttachDocumentRequest.prototype.setChangePack = function(value) {
  return jspb.Message.setWrapperField(this, 2, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.api.AttachDocumentRequest} returns this
 */
proto.api.AttachDocumentRequest.prototype.clearChangePack = function() {
  return this.setChangePack(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.api.AttachDocumentRequest.prototype.hasChangePack = function() {
  return jspb.Message.getField(this, 2) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.api.AttachDocumentResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.api.AttachDocumentResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.api.AttachDocumentResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.api.AttachDocumentResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    clientId: msg.getClientId_asB64(),
    changePack: (f = msg.getChangePack()) && resources_pb.ChangePack.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.api.AttachDocumentResponse}
 */
proto.api.AttachDocumentResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.api.AttachDocumentResponse;
  return proto.api.AttachDocumentResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.api.AttachDocumentResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.api.AttachDocumentResponse}
 */
proto.api.AttachDocumentResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {!Uint8Array} */ (reader.readBytes());
      msg.setClientId(value);
      break;
    case 2:
      var value = new resources_pb.ChangePack;
      reader.readMessage(value,resources_pb.ChangePack.deserializeBinaryFromReader);
      msg.setChangePack(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.api.AttachDocumentResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.api.AttachDocumentResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.api.AttachDocumentResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.api.AttachDocumentResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getClientId_asU8();
  if (f.length > 0) {
    writer.writeBytes(
      1,
      f
    );
  }
  f = message.getChangePack();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      resources_pb.ChangePack.serializeBinaryToWriter
    );
  }
};


/**
 * optional bytes client_id = 1;
 * @return {string}
 */
proto.api.AttachDocumentResponse.prototype.getClientId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * optional bytes client_id = 1;
 * This is a type-conversion wrapper around `getClientId()`
 * @return {string}
 */
proto.api.AttachDocumentResponse.prototype.getClientId_asB64 = function() {
  return /** @type {string} */ (jspb.Message.bytesAsB64(
      this.getClientId()));
};


/**
 * optional bytes client_id = 1;
 * Note that Uint8Array is not supported on all browsers.
 * @see http://caniuse.com/Uint8Array
 * This is a type-conversion wrapper around `getClientId()`
 * @return {!Uint8Array}
 */
proto.api.AttachDocumentResponse.prototype.getClientId_asU8 = function() {
  return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(
      this.getClientId()));
};


/**
 * @param {!(string|Uint8Array)} value
 * @return {!proto.api.AttachDocumentResponse} returns this
 */
proto.api.AttachDocumentResponse.prototype.setClientId = function(value) {
  return jspb.Message.setProto3BytesField(this, 1, value);
};


/**
 * optional ChangePack change_pack = 2;
 * @return {?proto.api.ChangePack}
 */
proto.api.AttachDocumentResponse.prototype.getChangePack = function() {
  return /** @type{?proto.api.ChangePack} */ (
    jspb.Message.getWrapperField(this, resources_pb.ChangePack, 2));
};


/**
 * @param {?proto.api.ChangePack|undefined} value
 * @return {!proto.api.AttachDocumentResponse} returns this
*/
proto.api.AttachDocumentResponse.prototype.setChangePack = function(value) {
  return jspb.Message.setWrapperField(this, 2, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.api.AttachDocumentResponse} returns this
 */
proto.api.AttachDocumentResponse.prototype.clearChangePack = function() {
  return this.setChangePack(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.api.AttachDocumentResponse.prototype.hasChangePack = function() {
  return jspb.Message.getField(this, 2) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.api.DetachDocumentRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.api.DetachDocumentRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.api.DetachDocumentRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.api.DetachDocumentRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    clientId: msg.getClientId_asB64(),
    changePack: (f = msg.getChangePack()) && resources_pb.ChangePack.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.api.DetachDocumentRequest}
 */
proto.api.DetachDocumentRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.api.DetachDocumentRequest;
  return proto.api.DetachDocumentRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.api.DetachDocumentRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.api.DetachDocumentRequest}
 */
proto.api.DetachDocumentRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {!Uint8Array} */ (reader.readBytes());
      msg.setClientId(value);
      break;
    case 2:
      var value = new resources_pb.ChangePack;
      reader.readMessage(value,resources_pb.ChangePack.deserializeBinaryFromReader);
      msg.setChangePack(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.api.DetachDocumentRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.api.DetachDocumentRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.api.DetachDocumentRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.api.DetachDocumentRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getClientId_asU8();
  if (f.length > 0) {
    writer.writeBytes(
      1,
      f
    );
  }
  f = message.getChangePack();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      resources_pb.ChangePack.serializeBinaryToWriter
    );
  }
};


/**
 * optional bytes client_id = 1;
 * @return {string}
 */
proto.api.DetachDocumentRequest.prototype.getClientId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * optional bytes client_id = 1;
 * This is a type-conversion wrapper around `getClientId()`
 * @return {string}
 */
proto.api.DetachDocumentRequest.prototype.getClientId_asB64 = function() {
  return /** @type {string} */ (jspb.Message.bytesAsB64(
      this.getClientId()));
};


/**
 * optional bytes client_id = 1;
 * Note that Uint8Array is not supported on all browsers.
 * @see http://caniuse.com/Uint8Array
 * This is a type-conversion wrapper around `getClientId()`
 * @return {!Uint8Array}
 */
proto.api.DetachDocumentRequest.prototype.getClientId_asU8 = function() {
  return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(
      this.getClientId()));
};


/**
 * @param {!(string|Uint8Array)} value
 * @return {!proto.api.DetachDocumentRequest} returns this
 */
proto.api.DetachDocumentRequest.prototype.setClientId = function(value) {
  return jspb.Message.setProto3BytesField(this, 1, value);
};


/**
 * optional ChangePack change_pack = 2;
 * @return {?proto.api.ChangePack}
 */
proto.api.DetachDocumentRequest.prototype.getChangePack = function() {
  return /** @type{?proto.api.ChangePack} */ (
    jspb.Message.getWrapperField(this, resources_pb.ChangePack, 2));
};


/**
 * @param {?proto.api.ChangePack|undefined} value
 * @return {!proto.api.DetachDocumentRequest} returns this
*/
proto.api.DetachDocumentRequest.prototype.setChangePack = function(value) {
  return jspb.Message.setWrapperField(this, 2, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.api.DetachDocumentRequest} returns this
 */
proto.api.DetachDocumentRequest.prototype.clearChangePack = function() {
  return this.setChangePack(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.api.DetachDocumentRequest.prototype.hasChangePack = function() {
  return jspb.Message.getField(this, 2) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.api.DetachDocumentResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.api.DetachDocumentResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.api.DetachDocumentResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.api.DetachDocumentResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    clientKey: jspb.Message.getFieldWithDefault(msg, 1, ""),
    changePack: (f = msg.getChangePack()) && resources_pb.ChangePack.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.api.DetachDocumentResponse}
 */
proto.api.DetachDocumentResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.api.DetachDocumentResponse;
  return proto.api.DetachDocumentResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.api.DetachDocumentResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.api.DetachDocumentResponse}
 */
proto.api.DetachDocumentResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setClientKey(value);
      break;
    case 2:
      var value = new resources_pb.ChangePack;
      reader.readMessage(value,resources_pb.ChangePack.deserializeBinaryFromReader);
      msg.setChangePack(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.api.DetachDocumentResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.api.DetachDocumentResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.api.DetachDocumentResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.api.DetachDocumentResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getClientKey();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getChangePack();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      resources_pb.ChangePack.serializeBinaryToWriter
    );
  }
};


/**
 * optional string client_key = 1;
 * @return {string}
 */
proto.api.DetachDocumentResponse.prototype.getClientKey = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.api.DetachDocumentResponse} returns this
 */
proto.api.DetachDocumentResponse.prototype.setClientKey = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional ChangePack change_pack = 2;
 * @return {?proto.api.ChangePack}
 */
proto.api.DetachDocumentResponse.prototype.getChangePack = function() {
  return /** @type{?proto.api.ChangePack} */ (
    jspb.Message.getWrapperField(this, resources_pb.ChangePack, 2));
};


/**
 * @param {?proto.api.ChangePack|undefined} value
 * @return {!proto.api.DetachDocumentResponse} returns this
*/
proto.api.DetachDocumentResponse.prototype.setChangePack = function(value) {
  return jspb.Message.setWrapperField(this, 2, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.api.DetachDocumentResponse} returns this
 */
proto.api.DetachDocumentResponse.prototype.clearChangePack = function() {
  return this.setChangePack(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.api.DetachDocumentResponse.prototype.hasChangePack = function() {
  return jspb.Message.getField(this, 2) != null;
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.api.WatchDocumentsRequest.repeatedFields_ = [2];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.api.WatchDocumentsRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.api.WatchDocumentsRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.api.WatchDocumentsRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.api.WatchDocumentsRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    client: (f = msg.getClient()) && resources_pb.Client.toObject(includeInstance, f),
    documentKeysList: (f = jspb.Message.getRepeatedField(msg, 2)) == null ? undefined : f
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.api.WatchDocumentsRequest}
 */
proto.api.WatchDocumentsRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.api.WatchDocumentsRequest;
  return proto.api.WatchDocumentsRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.api.WatchDocumentsRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.api.WatchDocumentsRequest}
 */
proto.api.WatchDocumentsRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new resources_pb.Client;
      reader.readMessage(value,resources_pb.Client.deserializeBinaryFromReader);
      msg.setClient(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.addDocumentKeys(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.api.WatchDocumentsRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.api.WatchDocumentsRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.api.WatchDocumentsRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.api.WatchDocumentsRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getClient();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      resources_pb.Client.serializeBinaryToWriter
    );
  }
  f = message.getDocumentKeysList();
  if (f.length > 0) {
    writer.writeRepeatedString(
      2,
      f
    );
  }
};


/**
 * optional Client client = 1;
 * @return {?proto.api.Client}
 */
proto.api.WatchDocumentsRequest.prototype.getClient = function() {
  return /** @type{?proto.api.Client} */ (
    jspb.Message.getWrapperField(this, resources_pb.Client, 1));
};


/**
 * @param {?proto.api.Client|undefined} value
 * @return {!proto.api.WatchDocumentsRequest} returns this
*/
proto.api.WatchDocumentsRequest.prototype.setClient = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.api.WatchDocumentsRequest} returns this
 */
proto.api.WatchDocumentsRequest.prototype.clearClient = function() {
  return this.setClient(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.api.WatchDocumentsRequest.prototype.hasClient = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * repeated string document_keys = 2;
 * @return {!Array<string>}
 */
proto.api.WatchDocumentsRequest.prototype.getDocumentKeysList = function() {
  return /** @type {!Array<string>} */ (jspb.Message.getRepeatedField(this, 2));
};


/**
 * @param {!Array<string>} value
 * @return {!proto.api.WatchDocumentsRequest} returns this
 */
proto.api.WatchDocumentsRequest.prototype.setDocumentKeysList = function(value) {
  return jspb.Message.setField(this, 2, value || []);
};


/**
 * @param {string} value
 * @param {number=} opt_index
 * @return {!proto.api.WatchDocumentsRequest} returns this
 */
proto.api.WatchDocumentsRequest.prototype.addDocumentKeys = function(value, opt_index) {
  return jspb.Message.addToRepeatedField(this, 2, value, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.api.WatchDocumentsRequest} returns this
 */
proto.api.WatchDocumentsRequest.prototype.clearDocumentKeysList = function() {
  return this.setDocumentKeysList([]);
};



/**
 * Oneof group definitions for this message. Each group defines the field
 * numbers belonging to that group. When of these fields' value is set, all
 * other fields in the group are cleared. During deserialization, if multiple
 * fields are encountered for a group, only the last value seen will be kept.
 * @private {!Array<!Array<number>>}
 * @const
 */
proto.api.WatchDocumentsResponse.oneofGroups_ = [[1,2]];

/**
 * @enum {number}
 */
proto.api.WatchDocumentsResponse.BodyCase = {
  BODY_NOT_SET: 0,
  INITIALIZATION: 1,
  EVENT: 2
};

/**
 * @return {proto.api.WatchDocumentsResponse.BodyCase}
 */
proto.api.WatchDocumentsResponse.prototype.getBodyCase = function() {
  return /** @type {proto.api.WatchDocumentsResponse.BodyCase} */(jspb.Message.computeOneofCase(this, proto.api.WatchDocumentsResponse.oneofGroups_[0]));
};



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.api.WatchDocumentsResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.api.WatchDocumentsResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.api.WatchDocumentsResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.api.WatchDocumentsResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    initialization: (f = msg.getInitialization()) && proto.api.WatchDocumentsResponse.Initialization.toObject(includeInstance, f),
    event: (f = msg.getEvent()) && resources_pb.DocEvent.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.api.WatchDocumentsResponse}
 */
proto.api.WatchDocumentsResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.api.WatchDocumentsResponse;
  return proto.api.WatchDocumentsResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.api.WatchDocumentsResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.api.WatchDocumentsResponse}
 */
proto.api.WatchDocumentsResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.api.WatchDocumentsResponse.Initialization;
      reader.readMessage(value,proto.api.WatchDocumentsResponse.Initialization.deserializeBinaryFromReader);
      msg.setInitialization(value);
      break;
    case 2:
      var value = new resources_pb.DocEvent;
      reader.readMessage(value,resources_pb.DocEvent.deserializeBinaryFromReader);
      msg.setEvent(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.api.WatchDocumentsResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.api.WatchDocumentsResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.api.WatchDocumentsResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.api.WatchDocumentsResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getInitialization();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      proto.api.WatchDocumentsResponse.Initialization.serializeBinaryToWriter
    );
  }
  f = message.getEvent();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      resources_pb.DocEvent.serializeBinaryToWriter
    );
  }
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.api.WatchDocumentsResponse.Initialization.prototype.toObject = function(opt_includeInstance) {
  return proto.api.WatchDocumentsResponse.Initialization.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.api.WatchDocumentsResponse.Initialization} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.api.WatchDocumentsResponse.Initialization.toObject = function(includeInstance, msg) {
  var f, obj = {
    peersMapByDocMap: (f = msg.getPeersMapByDocMap()) ? f.toObject(includeInstance, proto.api.Clients.toObject) : []
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.api.WatchDocumentsResponse.Initialization}
 */
proto.api.WatchDocumentsResponse.Initialization.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.api.WatchDocumentsResponse.Initialization;
  return proto.api.WatchDocumentsResponse.Initialization.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.api.WatchDocumentsResponse.Initialization} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.api.WatchDocumentsResponse.Initialization}
 */
proto.api.WatchDocumentsResponse.Initialization.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = msg.getPeersMapByDocMap();
      reader.readMessage(value, function(message, reader) {
        jspb.Map.deserializeBinary(message, reader, jspb.BinaryReader.prototype.readString, jspb.BinaryReader.prototype.readMessage, proto.api.Clients.deserializeBinaryFromReader, "", new proto.api.Clients());
         });
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.api.WatchDocumentsResponse.Initialization.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.api.WatchDocumentsResponse.Initialization.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.api.WatchDocumentsResponse.Initialization} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.api.WatchDocumentsResponse.Initialization.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getPeersMapByDocMap(true);
  if (f && f.getLength() > 0) {
    f.serializeBinary(1, writer, jspb.BinaryWriter.prototype.writeString, jspb.BinaryWriter.prototype.writeMessage, proto.api.Clients.serializeBinaryToWriter);
  }
};


/**
 * map<string, Clients> peers_map_by_doc = 1;
 * @param {boolean=} opt_noLazyCreate Do not create the map if
 * empty, instead returning `undefined`
 * @return {!jspb.Map<string,!proto.api.Clients>}
 */
proto.api.WatchDocumentsResponse.Initialization.prototype.getPeersMapByDocMap = function(opt_noLazyCreate) {
  return /** @type {!jspb.Map<string,!proto.api.Clients>} */ (
      jspb.Message.getMapField(this, 1, opt_noLazyCreate,
      proto.api.Clients));
};


/**
 * Clears values from the map. The map will be non-null.
 * @return {!proto.api.WatchDocumentsResponse.Initialization} returns this
 */
proto.api.WatchDocumentsResponse.Initialization.prototype.clearPeersMapByDocMap = function() {
  this.getPeersMapByDocMap().clear();
  return this;};


/**
 * optional Initialization initialization = 1;
 * @return {?proto.api.WatchDocumentsResponse.Initialization}
 */
proto.api.WatchDocumentsResponse.prototype.getInitialization = function() {
  return /** @type{?proto.api.WatchDocumentsResponse.Initialization} */ (
    jspb.Message.getWrapperField(this, proto.api.WatchDocumentsResponse.Initialization, 1));
};


/**
 * @param {?proto.api.WatchDocumentsResponse.Initialization|undefined} value
 * @return {!proto.api.WatchDocumentsResponse} returns this
*/
proto.api.WatchDocumentsResponse.prototype.setInitialization = function(value) {
  return jspb.Message.setOneofWrapperField(this, 1, proto.api.WatchDocumentsResponse.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.api.WatchDocumentsResponse} returns this
 */
proto.api.WatchDocumentsResponse.prototype.clearInitialization = function() {
  return this.setInitialization(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.api.WatchDocumentsResponse.prototype.hasInitialization = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional DocEvent event = 2;
 * @return {?proto.api.DocEvent}
 */
proto.api.WatchDocumentsResponse.prototype.getEvent = function() {
  return /** @type{?proto.api.DocEvent} */ (
    jspb.Message.getWrapperField(this, resources_pb.DocEvent, 2));
};


/**
 * @param {?proto.api.DocEvent|undefined} value
 * @return {!proto.api.WatchDocumentsResponse} returns this
*/
proto.api.WatchDocumentsResponse.prototype.setEvent = function(value) {
  return jspb.Message.setOneofWrapperField(this, 2, proto.api.WatchDocumentsResponse.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.api.WatchDocumentsResponse} returns this
 */
proto.api.WatchDocumentsResponse.prototype.clearEvent = function() {
  return this.setEvent(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.api.WatchDocumentsResponse.prototype.hasEvent = function() {
  return jspb.Message.getField(this, 2) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.api.PushPullRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.api.PushPullRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.api.PushPullRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.api.PushPullRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    clientId: msg.getClientId_asB64(),
    changePack: (f = msg.getChangePack()) && resources_pb.ChangePack.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.api.PushPullRequest}
 */
proto.api.PushPullRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.api.PushPullRequest;
  return proto.api.PushPullRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.api.PushPullRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.api.PushPullRequest}
 */
proto.api.PushPullRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {!Uint8Array} */ (reader.readBytes());
      msg.setClientId(value);
      break;
    case 2:
      var value = new resources_pb.ChangePack;
      reader.readMessage(value,resources_pb.ChangePack.deserializeBinaryFromReader);
      msg.setChangePack(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.api.PushPullRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.api.PushPullRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.api.PushPullRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.api.PushPullRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getClientId_asU8();
  if (f.length > 0) {
    writer.writeBytes(
      1,
      f
    );
  }
  f = message.getChangePack();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      resources_pb.ChangePack.serializeBinaryToWriter
    );
  }
};


/**
 * optional bytes client_id = 1;
 * @return {string}
 */
proto.api.PushPullRequest.prototype.getClientId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * optional bytes client_id = 1;
 * This is a type-conversion wrapper around `getClientId()`
 * @return {string}
 */
proto.api.PushPullRequest.prototype.getClientId_asB64 = function() {
  return /** @type {string} */ (jspb.Message.bytesAsB64(
      this.getClientId()));
};


/**
 * optional bytes client_id = 1;
 * Note that Uint8Array is not supported on all browsers.
 * @see http://caniuse.com/Uint8Array
 * This is a type-conversion wrapper around `getClientId()`
 * @return {!Uint8Array}
 */
proto.api.PushPullRequest.prototype.getClientId_asU8 = function() {
  return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(
      this.getClientId()));
};


/**
 * @param {!(string|Uint8Array)} value
 * @return {!proto.api.PushPullRequest} returns this
 */
proto.api.PushPullRequest.prototype.setClientId = function(value) {
  return jspb.Message.setProto3BytesField(this, 1, value);
};


/**
 * optional ChangePack change_pack = 2;
 * @return {?proto.api.ChangePack}
 */
proto.api.PushPullRequest.prototype.getChangePack = function() {
  return /** @type{?proto.api.ChangePack} */ (
    jspb.Message.getWrapperField(this, resources_pb.ChangePack, 2));
};


/**
 * @param {?proto.api.ChangePack|undefined} value
 * @return {!proto.api.PushPullRequest} returns this
*/
proto.api.PushPullRequest.prototype.setChangePack = function(value) {
  return jspb.Message.setWrapperField(this, 2, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.api.PushPullRequest} returns this
 */
proto.api.PushPullRequest.prototype.clearChangePack = function() {
  return this.setChangePack(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.api.PushPullRequest.prototype.hasChangePack = function() {
  return jspb.Message.getField(this, 2) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.api.PushPullResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.api.PushPullResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.api.PushPullResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.api.PushPullResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    clientId: msg.getClientId_asB64(),
    changePack: (f = msg.getChangePack()) && resources_pb.ChangePack.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.api.PushPullResponse}
 */
proto.api.PushPullResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.api.PushPullResponse;
  return proto.api.PushPullResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.api.PushPullResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.api.PushPullResponse}
 */
proto.api.PushPullResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {!Uint8Array} */ (reader.readBytes());
      msg.setClientId(value);
      break;
    case 2:
      var value = new resources_pb.ChangePack;
      reader.readMessage(value,resources_pb.ChangePack.deserializeBinaryFromReader);
      msg.setChangePack(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.api.PushPullResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.api.PushPullResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.api.PushPullResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.api.PushPullResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getClientId_asU8();
  if (f.length > 0) {
    writer.writeBytes(
      1,
      f
    );
  }
  f = message.getChangePack();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      resources_pb.ChangePack.serializeBinaryToWriter
    );
  }
};


/**
 * optional bytes client_id = 1;
 * @return {string}
 */
proto.api.PushPullResponse.prototype.getClientId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * optional bytes client_id = 1;
 * This is a type-conversion wrapper around `getClientId()`
 * @return {string}
 */
proto.api.PushPullResponse.prototype.getClientId_asB64 = function() {
  return /** @type {string} */ (jspb.Message.bytesAsB64(
      this.getClientId()));
};


/**
 * optional bytes client_id = 1;
 * Note that Uint8Array is not supported on all browsers.
 * @see http://caniuse.com/Uint8Array
 * This is a type-conversion wrapper around `getClientId()`
 * @return {!Uint8Array}
 */
proto.api.PushPullResponse.prototype.getClientId_asU8 = function() {
  return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(
      this.getClientId()));
};


/**
 * @param {!(string|Uint8Array)} value
 * @return {!proto.api.PushPullResponse} returns this
 */
proto.api.PushPullResponse.prototype.setClientId = function(value) {
  return jspb.Message.setProto3BytesField(this, 1, value);
};


/**
 * optional ChangePack change_pack = 2;
 * @return {?proto.api.ChangePack}
 */
proto.api.PushPullResponse.prototype.getChangePack = function() {
  return /** @type{?proto.api.ChangePack} */ (
    jspb.Message.getWrapperField(this, resources_pb.ChangePack, 2));
};


/**
 * @param {?proto.api.ChangePack|undefined} value
 * @return {!proto.api.PushPullResponse} returns this
*/
proto.api.PushPullResponse.prototype.setChangePack = function(value) {
  return jspb.Message.setWrapperField(this, 2, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.api.PushPullResponse} returns this
 */
proto.api.PushPullResponse.prototype.clearChangePack = function() {
  return this.setChangePack(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.api.PushPullResponse.prototype.hasChangePack = function() {
  return jspb.Message.getField(this, 2) != null;
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.api.UpdateMetadataRequest.repeatedFields_ = [2];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.api.UpdateMetadataRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.api.UpdateMetadataRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.api.UpdateMetadataRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.api.UpdateMetadataRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    client: (f = msg.getClient()) && resources_pb.Client.toObject(includeInstance, f),
    documentKeysList: (f = jspb.Message.getRepeatedField(msg, 2)) == null ? undefined : f
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.api.UpdateMetadataRequest}
 */
proto.api.UpdateMetadataRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.api.UpdateMetadataRequest;
  return proto.api.UpdateMetadataRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.api.UpdateMetadataRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.api.UpdateMetadataRequest}
 */
proto.api.UpdateMetadataRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new resources_pb.Client;
      reader.readMessage(value,resources_pb.Client.deserializeBinaryFromReader);
      msg.setClient(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.addDocumentKeys(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.api.UpdateMetadataRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.api.UpdateMetadataRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.api.UpdateMetadataRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.api.UpdateMetadataRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getClient();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      resources_pb.Client.serializeBinaryToWriter
    );
  }
  f = message.getDocumentKeysList();
  if (f.length > 0) {
    writer.writeRepeatedString(
      2,
      f
    );
  }
};


/**
 * optional Client client = 1;
 * @return {?proto.api.Client}
 */
proto.api.UpdateMetadataRequest.prototype.getClient = function() {
  return /** @type{?proto.api.Client} */ (
    jspb.Message.getWrapperField(this, resources_pb.Client, 1));
};


/**
 * @param {?proto.api.Client|undefined} value
 * @return {!proto.api.UpdateMetadataRequest} returns this
*/
proto.api.UpdateMetadataRequest.prototype.setClient = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.api.UpdateMetadataRequest} returns this
 */
proto.api.UpdateMetadataRequest.prototype.clearClient = function() {
  return this.setClient(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.api.UpdateMetadataRequest.prototype.hasClient = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * repeated string document_keys = 2;
 * @return {!Array<string>}
 */
proto.api.UpdateMetadataRequest.prototype.getDocumentKeysList = function() {
  return /** @type {!Array<string>} */ (jspb.Message.getRepeatedField(this, 2));
};


/**
 * @param {!Array<string>} value
 * @return {!proto.api.UpdateMetadataRequest} returns this
 */
proto.api.UpdateMetadataRequest.prototype.setDocumentKeysList = function(value) {
  return jspb.Message.setField(this, 2, value || []);
};


/**
 * @param {string} value
 * @param {number=} opt_index
 * @return {!proto.api.UpdateMetadataRequest} returns this
 */
proto.api.UpdateMetadataRequest.prototype.addDocumentKeys = function(value, opt_index) {
  return jspb.Message.addToRepeatedField(this, 2, value, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.api.UpdateMetadataRequest} returns this
 */
proto.api.UpdateMetadataRequest.prototype.clearDocumentKeysList = function() {
  return this.setDocumentKeysList([]);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.api.UpdateMetadataResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.api.UpdateMetadataResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.api.UpdateMetadataResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.api.UpdateMetadataResponse.toObject = function(includeInstance, msg) {
  var f, obj = {

  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.api.UpdateMetadataResponse}
 */
proto.api.UpdateMetadataResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.api.UpdateMetadataResponse;
  return proto.api.UpdateMetadataResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.api.UpdateMetadataResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.api.UpdateMetadataResponse}
 */
proto.api.UpdateMetadataResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.api.UpdateMetadataResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.api.UpdateMetadataResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.api.UpdateMetadataResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.api.UpdateMetadataResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.api.ListChangesRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.api.ListChangesRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.api.ListChangesRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.api.ListChangesRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    clientId: msg.getClientId_asB64(),
    documentKey: jspb.Message.getFieldWithDefault(msg, 2, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.api.ListChangesRequest}
 */
proto.api.ListChangesRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.api.ListChangesRequest;
  return proto.api.ListChangesRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.api.ListChangesRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.api.ListChangesRequest}
 */
proto.api.ListChangesRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {!Uint8Array} */ (reader.readBytes());
      msg.setClientId(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setDocumentKey(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.api.ListChangesRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.api.ListChangesRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.api.ListChangesRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.api.ListChangesRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getClientId_asU8();
  if (f.length > 0) {
    writer.writeBytes(
      1,
      f
    );
  }
  f = message.getDocumentKey();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
};


/**
 * optional bytes client_id = 1;
 * @return {string}
 */
proto.api.ListChangesRequest.prototype.getClientId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * optional bytes client_id = 1;
 * This is a type-conversion wrapper around `getClientId()`
 * @return {string}
 */
proto.api.ListChangesRequest.prototype.getClientId_asB64 = function() {
  return /** @type {string} */ (jspb.Message.bytesAsB64(
      this.getClientId()));
};


/**
 * optional bytes client_id = 1;
 * Note that Uint8Array is not supported on all browsers.
 * @see http://caniuse.com/Uint8Array
 * This is a type-conversion wrapper around `getClientId()`
 * @return {!Uint8Array}
 */
proto.api.ListChangesRequest.prototype.getClientId_asU8 = function() {
  return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(
      this.getClientId()));
};


/**
 * @param {!(string|Uint8Array)} value
 * @return {!proto.api.ListChangesRequest} returns this
 */
proto.api.ListChangesRequest.prototype.setClientId = function(value) {
  return jspb.Message.setProto3BytesField(this, 1, value);
};


/**
 * optional string document_key = 2;
 * @return {string}
 */
proto.api.ListChangesRequest.prototype.getDocumentKey = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.api.ListChangesRequest} returns this
 */
proto.api.ListChangesRequest.prototype.setDocumentKey = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.api.ListChangesResponse.repeatedFields_ = [1];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.api.ListChangesResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.api.ListChangesResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.api.ListChangesResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.api.ListChangesResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    changesList: jspb.Message.toObjectList(msg.getChangesList(),
    resources_pb.Change.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.api.ListChangesResponse}
 */
proto.api.ListChangesResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.api.ListChangesResponse;
  return proto.api.ListChangesResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.api.ListChangesResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.api.ListChangesResponse}
 */
proto.api.ListChangesResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new resources_pb.Change;
      reader.readMessage(value,resources_pb.Change.deserializeBinaryFromReader);
      msg.addChanges(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.api.ListChangesResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.api.ListChangesResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.api.ListChangesResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.api.ListChangesResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getChangesList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      1,
      f,
      resources_pb.Change.serializeBinaryToWriter
    );
  }
};


/**
 * repeated Change changes = 1;
 * @return {!Array<!proto.api.Change>}
 */
proto.api.ListChangesResponse.prototype.getChangesList = function() {
  return /** @type{!Array<!proto.api.Change>} */ (
    jspb.Message.getRepeatedWrapperField(this, resources_pb.Change, 1));
};


/**
 * @param {!Array<!proto.api.Change>} value
 * @return {!proto.api.ListChangesResponse} returns this
*/
proto.api.ListChangesResponse.prototype.setChangesList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 1, value);
};


/**
 * @param {!proto.api.Change=} opt_value
 * @param {number=} opt_index
 * @return {!proto.api.Change}
 */
proto.api.ListChangesResponse.prototype.addChanges = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 1, opt_value, proto.api.Change, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.api.ListChangesResponse} returns this
 */
proto.api.ListChangesResponse.prototype.clearChangesList = function() {
  return this.setChangesList([]);
};


goog.object.extend(exports, proto.api);
